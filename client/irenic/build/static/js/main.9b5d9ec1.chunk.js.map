{"version":3,"sources":["assets/login-irenic.svg","assets/loginpage.svg","assets/irenic.svg","components/GlobalContext.tsx","components/api.ts","components/Login.tsx","components/home/ActivityBoxes.tsx","components/home/Activity.tsx","components/home/Nav.tsx","components/home/Feed.tsx","components/home/Notifications.tsx","components/home/Profile.tsx","components/home/microcomponents/Switches.tsx","components/home/Settings.tsx","components/home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","GlobalContext","createContext","GlobalContextProvider","children","useState","user","setUser","Provider","value","cache","setupCache","maxAge","api","axios","create","adapter","cookie","Cookies","endpoint","window","location","origin","a","get","withCredentials","result","data","login","username","email","password","maxRedirects","method","url","status","message","set","path","console","log","Login","vailditymessage","setVailditymessage","username_email","useRef","className","src","logo","alt","Array","isArray","map","detail","i","key","label","valueref","type","onClick","e","preventDefault","username_email_v","current","password_v","then","reload","TextView","id","required","invalidmessage","inputDom","labelDom","focus","setfocus","useEffect","onfocus","onblur","addEventListener","error","removeEventListener","ref","LoginPage","backgroundlogo","Topics","Activity","placeholder","LoggedinProfile","history","useHistory","currentpath","setCurrentpath","pathname","listen","profile_img","name","bio","push","style","background","NavLink","to","Home","Notifications","Profile","Settings","Number","Nav","useContext","irenic_logo","Posts","Date","now","posts","document","title","length","CreatePost","textareaRef","charcount","setCharcount","maxLength","onChange","height","scrollHeight","trimStart","Feed","Notification","github","target","rel","href","instagram","Switch","state","onswitch","switchDom","track_class","head_class","switch1","setSwitch1","setTimeout","basename","exact","App","checkAuth","newuser","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9b5d9ec1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login-irenic.f5c45a13.svg\";","module.exports = __webpack_public_path__ + \"static/media/loginpage.47ab12a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/irenic.dc4ab841.svg\";","import React, { createContext, useEffect, useState } from 'react';\n\n// Api\nimport { checkAuth, login } from './api';\n//types\nimport { User, GlobalContextValue } from './ContextTypes';\n\nexport const GlobalContext = createContext<GlobalContextValue>({});\n\nexport const GlobalContextProvider: React.FC = ({ children }) => {\n  const [user, setUser] = useState<User | undefined>();\n\n  /* useEffect(() => {\n\n    checkAuth().then((newuser) => {\n      setUser(newuser);\n    });\n  }, []); */\n\n  return (\n    <GlobalContext.Provider value={{ user, setUser }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import axios from 'axios';\nimport { setupCache } from 'axios-cache-adapter';\nimport Cookies from 'universal-cookie';\n// Create `axios-cache-adapter` instance\nconst cache = setupCache({\n  maxAge: 15 * 60 * 1000,\n});\n\n// Create `axios` instance passing the newly created `cache.adapter`\nconst api = axios.create({\n  adapter: cache.adapter,\n});\n\nconst cookie = new Cookies();\n\nconst endpoint =\n  window.location.origin === 'http://localhost:3000'\n    ? 'http://localhost:8000'\n    : window.location.origin;\n\nexport async function checkAuth() {\n  const token = cookie.get('token');\n  if (!token) {\n    // window.location.href = `${endpoint}/account/login`;\n    return;\n  } else {\n    try {\n      const result = await api.get(`${endpoint}/auth/user`, {\n        withCredentials: true,\n      });\n\n      return result.data;\n    } catch (error) {\n      //  window.location.href = `${window.location.origin}/account/login`;\n      return;\n    }\n  }\n}\n\nexport async function getMembers() {\n  console.log(endpoint);\n  let result;\n  try {\n    result = await api.get(`${endpoint}/api/team`);\n    return result.data;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\n\ntype RegisterationDetails = {\n  email: string;\n  username: string;\n  password: string;\n  github?: string;\n  instagram?: string;\n};\nexport async function register({\n  email,\n  username,\n  password,\n  github,\n  instagram,\n}: RegisterationDetails) {\n  let result;\n  try {\n    result = await api.post(`${endpoint}/api/register`, {\n      email,\n      username,\n      password,\n      github,\n      instagram,\n    });\n    return result.data;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\n\ninterface PasswordLogin {\n  password: string;\n}\ninterface UsernameLogin extends PasswordLogin {\n  username: string;\n}\ninterface EmailLogin extends PasswordLogin {\n  email: string;\n}\ntype LoginDetails = UsernameLogin | EmailLogin;\n\nexport async function login(login: LoginDetails) {\n  const { username, email, password }: any = login;\n  let result;\n  try {\n    //result = await api.post(`${endpoint}/auth`, { email, username, password });\n\n    result = await api({\n      maxRedirects: 0,\n      method: 'post',\n      url: `${endpoint}/auth`,\n      data: { email, username, password },\n    });\n\n    //result = await loadDoc(`${endpoint}/auth`, { email, username, password })\n\n    if (result.status === 400) {\n      return [{ message: result.data }];\n    } else if (result.status === 200) {\n      const cookies = new Cookies();\n      cookies.set('token', result.data, { path: '/' });\n      //window.location.href = `${endpoint}/irenic`;\n      return result.data;\n    }\n  } catch (error) {\n    console.log(error);\n    return [{ message: 'invalid username or password' }];\n  }\n}\n\nfunction loadDoc(url: string, { username, email, password }: any) {\n  const id = email || username;\n  const id_name = email ? 'email' : username ? 'username' : '';\n\n  var xhttp = new XMLHttpRequest();\n  return new Promise((res, rej) => {\n    xhttp.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        res(this.responseText);\n      } else {\n        rej(this);\n      }\n    };\n    xhttp.open('POST', url, true);\n    xhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n    xhttp.send(`${id_name}=${id}&password=${password}`);\n  });\n}\n","import React, { useRef, useState, useEffect } from 'react';\n\n//styles\nimport './scss/Login.css';\n\nimport logo from '../assets/login-irenic.svg';\nimport backgroundlogo from '../assets/loginpage.svg';\n\nimport { login } from './api';\n\ninterface LoginProps {}\n\nconst LoginPage: React.FC<LoginProps> = () => {\n  return (\n    <div className=\"login-page\">\n      <Login />\n      <img src={backgroundlogo} alt=\"\" />\n    </div>\n  );\n};\n\nconst Login = () => {\n  const [vailditymessage, setVailditymessage] = useState([]);\n\n  const username_email = useRef<HTMLInputElement>(null);\n  const password = useRef<HTMLInputElement>(null);\n\n  const submit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    const username_email_v = username_email.current?.value;\n    const password_v = password.current?.value;\n    if (username_email_v && password_v)\n      login({ username: username_email_v, password: password_v }).then(\n        (message) => {\n          if (typeof message === 'string') {\n            window.location.reload();\n          } else {\n            setVailditymessage(message);\n          }\n        }\n      );\n  };\n\n  return (\n    <form className=\"login\">\n      <img src={logo} alt=\"\" />\n      {Array.isArray(vailditymessage)\n        ? vailditymessage.map((detail: { message: string }, i) => (\n            <p key={i}>{detail.message}</p>\n          ))\n        : ''}\n      <div className=\"form-section\">\n        <TextView label=\"email/username\" valueref={username_email} />\n        <TextView label=\"password\" type=\"password\" valueref={password} />\n      </div>\n\n      <button onClick={submit}>Log in</button>\n      <span>sign up</span>\n    </form>\n  );\n};\n\ninterface TextViewProps {\n  label: string;\n  type?: string;\n  id?: string;\n  valueref: React.RefObject<HTMLInputElement>;\n  invalidmessage?: string;\n  required?: boolean;\n}\nconst TextView: React.FC<TextViewProps> = ({\n  label,\n  type = 'text',\n  id,\n  valueref,\n  invalidmessage,\n  required,\n}) => {\n  const inputDom = valueref;\n  const labelDom = useRef<HTMLSpanElement>(null);\n\n  const [focus, setfocus] = useState(false);\n\n  useEffect(() => {\n    const onfocus = () => {\n      setfocus(true);\n    };\n    const onblur = () => {\n      if (!inputDom?.current?.value) setfocus(false);\n    };\n    try {\n      inputDom?.current?.addEventListener('focus', onfocus);\n      inputDom?.current?.addEventListener('blur', onblur);\n    } catch (error) {}\n\n    return () => {\n      try {\n        inputDom?.current?.removeEventListener('focus', onfocus);\n        // eslint-disable-next-line\n        inputDom?.current?.removeEventListener('blur', onblur);\n      } catch (e) {}\n    };\n  }, []);\n\n  return (\n    <div className=\"input-text\">\n      <span ref={labelDom} id={focus ? 'infocus' : ''}>\n        {label}\n        {required ? ' *' : ''}\n      </span>\n      <input ref={inputDom} type={type} id={id ? id : label} />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\n\nimport '../scss/ActivityBoxes.css';\n\ninterface TopicsProps {}\nexport const Topics: React.FC<TopicsProps> = () => {\n  return (\n    <div className=\"activity-box topics\">\n      <header>\n        <h4>Topics</h4>\n      </header>\n\n      <div className=\"activity-content\">\n          <div className=\"topic\">\n              <p>#SomeTopic</p>\n          </div>\n          <div className=\"topic\">\n              <p>#SomeTopic</p>\n          </div>\n          <div className=\"topic\">\n              <p>#SomeTopic</p>\n          </div>\n          <div className=\"topic\">\n              <p>#SomeTopic</p>\n          </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\n// Activity boxes\nimport { Topics } from './ActivityBoxes';\n\ninterface ActivityProps {}\n\nconst Activity: React.FC<ActivityProps> = () => {\n  return (\n    <div className=\"activity\">\n      <div className=\"search\">\n        <input type=\"text\" placeholder=\"search irenic..\"/>\n      </div>\n      <div className=\"activities\">\n        <Topics />\n      </div>\n    </div>\n  );\n};\n\nexport default Activity;\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { Link, useHistory } from 'react-router-dom';\n// import axios from 'axios';\n\n// Context\nimport { GlobalContext } from '../GlobalContext';\n// types\nimport { User } from '../ContextTypes';\n// assets\nimport irenic_logo from '../../assets/irenic.svg';\nconst Nav: React.FC = () => {\n  const { user } = useContext(GlobalContext);\n  return (\n    <div className=\"nav\">\n      <header>\n        <img src={irenic_logo} alt=\"irenic\" />\n      </header>\n\n      <div className=\"nav-links\">\n        <NavLink to=\"/home\" label=\"Home\" />\n        <NavLink to=\"/notifications\" label=\"Notifications\" />\n        <NavLink to=\"/profile\" label=\"Profile\" />\n        <NavLink to=\"/settings\" label=\"Settings\" />\n      </div>\n\n      <LoggedinProfile user={user} />\n    </div>\n  );\n};\n\nconst LoggedinProfile: React.FC<{ user: User | undefined }> = ({ user }) => {\n  const history = useHistory();\n  const [currentpath, setCurrentpath] = useState<string>('');\n\n  useEffect(() => {\n    setCurrentpath(history.location.pathname);\n    history.listen(({ pathname }) => {\n      setCurrentpath(pathname);\n    });\n  }, [history]);\n\n  if (user) {\n    return (\n      <div className=\"profile-preview\">\n        <img src={user.profile_img} alt=\"profilepicture\" />\n        <div className=\"about\">\n          <h4>{user.name}</h4>\n          <p>{user.bio ? user.bio : ''}</p>\n          <p>{user.username}</p>\n        </div>\n        <img\n          onClick={() => history.push('/settings')}\n          style={{\n            background:\n              currentpath === '/settings' ? 'var(--accent-color)' : '',\n          }}\n          id=\"settings-icon\"\n          src=\"https://img.icons8.com/material-sharp/24/000000/settings.png\"\n          alt=\"\"\n        />\n      </div>\n    );\n  } else return <></>;\n};\n\ninterface NavLinkProps {\n  to: string;\n  label: string;\n}\nconst NavLink: React.FC<NavLinkProps> = ({ to, label }) => {\n  const history = useHistory();\n\n  const [currentpath, setCurrentpath] = useState<string>();\n\n  useEffect(() => {\n    setCurrentpath(history.location.pathname);\n    history.listen(({ pathname }) => {\n      setCurrentpath(pathname);\n    });\n  }, [history]);\n\n  interface Icons {\n    Home?: string[];\n    Notifications?: string[];\n    Profile?: string[];\n  }\n\n  const icons = {\n    Home: [\n      'https://img.icons8.com/material-outlined/24/000000/home--v2.png',\n      'https://img.icons8.com/material/24/000000/home--v5.png',\n    ],\n    Notifications: [\n      'https://img.icons8.com/material-outlined/24/000000/appointment-reminders.png',\n      'https://img.icons8.com/material-rounded/24/000000/appointment-reminders.png',\n    ],\n    Profile: [\n      'https://img.icons8.com/material-outlined/24/000000/user-male-circle.png',\n      'https://img.icons8.com/material/24/000000/user-male-circle--v1.png',\n    ],\n    Settings: [\n      'https://img.icons8.com/windows/24/000000/settings.png',\n      'https://img.icons8.com/material-sharp/24/000000/settings.png',\n    ],\n  };\n\n  return (\n    <div\n      className={currentpath === to ? 'nav-link selected-nav-link' : 'nav-link'}\n    >\n      <Link to={to}>\n        <img\n          src={icons[label as keyof Icons][Number(currentpath === to)]}\n          alt=\"\"\n        />\n        <span>{label}</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { useContext, useRef, useState, useEffect } from 'react';\n\nimport { GlobalContext } from '../GlobalContext';\nconst Feed: React.FC = () => {\n  const { user } = useContext(GlobalContext);\n  return (\n    <div className=\"feed\">\n      <header>\n        <h3>Home</h3>\n      </header>\n      <CreatePost profile_img={user?.profile_img} />\n      <Posts />\n    </div>\n  );\n};\n\ninterface PostsProps {}\nconst Posts: React.FC<PostsProps> = () => {\n  const post = {\n    message:\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Autem debitis sit porro placeat repellendus libero, perferendis corporis qui tempore quaerat id veniam magnam ad enim itaque? Dolor quas aliquid quod.',\n    writer: 'xrehpicx',\n    profile_img: 'https://avatars3.githubusercontent.com/u/22765674?v=4',\n    created_on: Date.now(),\n  };\n\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    document.title = 'irenic | Home';\n  }, []);\n\n  return (\n    <div className=\"posts\">\n      {!posts.length ? (\n        <div className=\"no-posts\">\n          <img\n            src=\"https://img.icons8.com/material-sharp/24/000000/activity-feed-2.png\"\n            alt=\"\"\n          />\n          <span>No Posts yet</span>\n        </div>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\n\ninterface CreatePostProps {\n  profile_img: string | undefined;\n}\nconst CreatePost: React.FC<CreatePostProps> = ({ profile_img }) => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const [charcount, setCharcount] = useState(0);\n  const onchange = () => {\n    if (textareaRef.current) {\n      // adjust height of textarea\n      textareaRef.current.style.height = '0px';\n      textareaRef.current.style.height =\n        25 + textareaRef.current.scrollHeight + 'px';\n\n      textareaRef.current.value = textareaRef.current.value.trimStart();\n      if (textareaRef.current.value.length <= 255) {\n        setCharcount(textareaRef.current.value.length);\n      } else {\n      }\n    }\n  };\n\n  return (\n    <div className=\"create-post\">\n      <form>\n        <img src={profile_img} alt=\"profile_img\" />\n        <div className=\"compose\">\n          <textarea\n            maxLength={255}\n            ref={textareaRef}\n            onChange={onchange}\n            placeholder=\"what's going on?\"\n          />\n        </div>\n      </form>\n      <p>{charcount >= 10 ? charcount : <></>}</p>\n\n      <button className={!(charcount > 10) ? 'disabled-post' : ''}>Post</button>\n    </div>\n  );\n};\n\nexport default Feed;\n","import React, { useEffect } from 'react';\n\ninterface NotificationsProps {}\nconst Notifications: React.FC<NotificationsProps> = () => {\n  return (\n    <div className=\"notifications\">\n      <header>\n        <h3>Notifications</h3>\n      </header>\n\n      <div className=\"notification-list\">\n        <Notification />\n        <Notification />\n        <Notification />\n        <Notification />\n        <Notification />\n        <Notification />\n        <Notification />\n        <Notification />\n        <Notification />\n        <Notification />\n        <Notification />\n        <Notification />\n        <Notification />\n        <Notification />\n        <Notification />\n        <Notification />\n        <Notification />\n      </div>\n    </div>\n  );\n};\n\ninterface NotificationProps {}\nconst Notification: React.FC<NotificationProps> = () => {\n  useEffect(() => {\n    document.title = 'irenic | Notifications';\n  }, []);\n  return (\n    <div className=\"notification\">\n      <h4>Title</h4>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Placeat\n        reprehenderit consequatur inventore aut voluptatum a.\n      </p>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React, { useContext, useEffect } from 'react';\n\n// context\nimport { GlobalContext } from '../GlobalContext';\n\ninterface ProfileProps {}\nconst Profile: React.FC<ProfileProps> = () => {\n  const { user } = useContext(GlobalContext);\n\n  useEffect(() => {\n    document.title = 'irenic | Profile';\n  }, []);\n\n  console.log(user);\n  return (\n    <div className=\"profile\">\n      <header>\n        <div className=\"profile-img\">\n          <img src={user?.profile_img} alt=\"\" />\n        </div>\n        {user ? (\n          <div className=\"about\">\n            <h2>{user.name || user.username}</h2>\n            <p>{user.email}</p>\n            {user.github ? (\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://github.com/${user.github}/`}\n              >\n                github\n              </a>\n            ) : (\n              <></>\n            )}\n            {user.instagram ? (\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://instagram.com/${user.instagram}/`}\n              >\n                instagram\n              </a>\n            ) : (\n              <></>\n            )}\n            {user.bio ? <p>{user.bio}</p> : <></>}\n          </div>\n        ) : (\n          <></>\n        )}\n      </header>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useRef } from 'react';\n\n// styles\nimport './scss/switches.css';\n\ninterface Switch1Props {\n  state: 0 | 1 | 2;\n  onswitch: () => void;\n  //   setSate: () => ;\n}\n\n\n\nexport const Switch: React.FC<Switch1Props> = ({ state,  onswitch }) => {\n  const switchDom = useRef(null);\n\n  let track_class = 'switch-track' + (state === 1 ? ' track-on' : '');\n  let head_class = 'switch-head' + (state === 1 ? ' head-on' : '');\n  if (state === 2) {\n    track_class = 'switch-track loading-track';\n    head_class = 'switch-head loading-head';\n  }\n\n  return (\n    <div ref={switchDom} className=\"switch1\" onClick={onswitch}>\n      <div className={track_class}>\n        <div className={head_class}></div>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\n\n// context\nimport { GlobalContext } from '../GlobalContext';\nimport { Switch } from './microcomponents/Switches';\n\ninterface ProfileProps {}\nconst Settings: React.FC<ProfileProps> = () => {\n  const { user } = useContext(GlobalContext);\n\n  const [switch1, setSwitch1] = useState<0 | 1 | 2>(0);\n  function dispatchswitch1() {\n    // setSwitch1(Number(!switch1));\n    setSwitch1(2); // loading state\n    setTimeout(() => {\n      setSwitch1(1);\n    }, 500);\n  }\n\n  useEffect(() => {\n    document.title = 'irenic | Settings';\n  }, []);\n\n  return (\n    <div className=\"settings\">\n      <Switch state={switch1} onswitch={dispatchswitch1} />\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n  Link,\n  Redirect,\n} from 'react-router-dom';\n\n//styles\nimport '../scss/Home.css';\n\n// Components\n\nimport Activity from './Activity';\nimport Nav from './Nav';\nimport Feed from './Feed';\nimport Notifications from './Notifications';\nimport Profile from './Profile';\nimport Settings from './Settings';\n\ninterface HomeProps {}\n\nconst Home: React.FC<HomeProps> = () => {\n  return (\n    <Router basename=\"/irenic\">\n      <div className=\"home\">\n        <Nav />\n        <Switch>\n          <Route path=\"/home\">\n            <Feed />\n            <Activity />\n          </Route>\n          <Route path=\"/notifications\">\n            <Notifications />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route path=\"/settings\">\n            <Settings />\n          </Route>\n        </Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/home\" />\n        </Route>\n      </div>\n    </Router>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useContext } from 'react';\n\nimport './App.css';\n/* import Cookies from 'universal-cookie'; */\nimport { GlobalContext } from './components/GlobalContext';\n\n// components\nimport Login from './components/Login';\nimport Home from './components/home/Home';\n\nimport { checkAuth } from './components/api';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  useHistory,\n} from 'react-router-dom';\n\nfunction App() {\n  const { user, setUser } = useContext(GlobalContext);\n  useEffect(() => {\n    // login({ username: 'raj', password: 'adminpassword' });\n\n    checkAuth().then((newuser) => {\n      setUser && setUser(newuser);\n    });\n  }, []);\n\n  if (user?.username) return <Home />;\n  return <Login />;\n}\n\n/* const Test = () => {\n  const history = useHistory();\n  useEffect(() => {\n    const cookies = new Cookies();\n    console.log(cookies.get('token'));\n    history.push('/test');\n  });\n\n  return <div className=\"App\"></div>;\n}; */\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// GlobalContext\nimport { GlobalContextProvider } from './components/GlobalContext';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalContextProvider>\n      <App />\n    </GlobalContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}